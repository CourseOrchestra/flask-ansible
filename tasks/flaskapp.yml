---
- name: Flask | Create group
  group:
    name: "{{ flask_user }}"
    state: present
  become: true

- name: Flask | Create user
  user:
    name: "{{ flask_user }}"
    group: "{{ flask_user }}"
  become: true

- name: Flask | Install supervisor
  apt:
    name: [supervisor]
  notify: restart supervisor
  become: true

- name: Flask | Create log directory
  file:
    dest: "{{ flask_log_dir }}"
    state: directory
    owner: "{{ flask_user }}"
    group: "{{ flask_user }}"
  become: true

- name: Flask | Create app directory
  file:
    dest: "{{ flask_root_dir }}"
    state: directory
    owner: "{{ flask_user }}"
    group: "{{ flask_user }}"
  become: true

# TODO возможно создавать автоматически тег??
- name: Flask | Checkout sources
  git:
    repo: "{{ sources_url }}"
    dest: "{{ flask_root_dir }}"
    force: true
    single_branch: true
  when: sources_url and checkout_style == 'git'
  register: checkout_sources
  notify: restart app

- name: Flask | Install virtualenv
  pip:
    name: "{{ virtualenv }}"
    executable: pip{{ python_version_short }}

- name: Flask | Install requirements | pipenv
  shell:
    cmd: "python{{ python_version_short }} -m pipenv install"
    chdir: "{{ flask_root_dir }}"
  args:
    executable: /bin/bash
  when: sources_url and virtualenv == 'pipenv' and checkout_sources.changed

- name: Flask | Install gunicorn
  pip:
    virtualenv: "{{ flask_root_dir }}/venv"
    virtualenv_python: python{{ python_version_short }}
    name: gunicorn

- name: Flask | Config app
  template:
    src: .env.jinja2
    dest: "{{ flask_root_dir }}/.env"
    owner: "{{ flask_user }}"
    group: "{{ flask_user }}"
    mode: 0600
  notify: restart app

- name: Flask | Migrate DB structure | virtualenv
  shell:
    chdir: "{{ flask_root_dir }}"
    cmd: \
      source venv/bin/activate
      flask db upgrade
  environment:
    FLASK_APP: "{{ flask_environment.FLASK_APP }}"
  when: flask_db_migrate and virtualenv == 'virtualenv' and checkout_sources.changed

- name: Flask | Migrate DB structure | pipenv
  shell:
    chdir: "{{ flask_root_dir }}"
    cmd: python{{ python_version_short }} -m pipenv run flask db upgrade
  environment:
    FLASK_APP: "{{ flask_environment.FLASK_APP }}"
  when: flask_db_migrate and virtualenv == 'pipenv' and checkout_sources.changed 

- name: Flask | Configure supervisor
  template:
    src: supervisor.conf.jinja2
    dest: /etc/supervisor/conf.d/{{ flaskapp_name }}.conf
  notify: restart supervisor
  become: true
